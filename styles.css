* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
  }
  
  body {
    height: 100vh;
    display: flex; /* with .memory-game margin:auto center the game container */
    background: #060AB2;
  }
  img {
    background-color: #ffffff;
    width:150px;
    height:120px;
    border:1px black solid;
   }
  .memory-game {
    width: 960px;
    height: 640px;
    margin: auto; /* with body display:flex center the game container */
    display: flex; /* changes items behaviour with default properties:
    flex-item {
      flex: 1; - each item takes same space
    }
    flex-container {
    flex-direction: row; items layed in row
    flex-wrap: nowrap; - layed out in one row only
    justify-content: flex-start; - positioned left to right
    align-items: stretch; - stretched acros container height
    }*/
    flex-wrap: wrap; /* items can be displayed in multiple rows*/
    perspective: 1000px;
  }
  
  .memory-card {
    width: calc(25% - 10px); /* substract 10 px to allow for 5px margin - overflow fix */
    height: calc(33.333% - 10px);
    margin: 5px; /* space between cards - causes overflow */
    position: relative; /* effecting position absolute set in .front-face .back-face */
    transform: scale(1); /* needst to be set to work with memory-card:active transform */
    transform-style: preserve-3d;
    transition: transform .5s;
    box-shadow: 1px 1px 1px rgba(0,0,0,.3);
  }
  
  .memory-card:active { /* click effect */
    transform: scale(0.97); /* shrinks the size to 97% */
    transition: transform .2s; /* smoother shrink */
  }
  
  .memory-card.flip {
    transform: rotateY(180deg);
  }
  
  .front-face,
  .back-face {
    width: 100%; /* takes the full available height of its container*/
    height: 100%;
    padding: 20px;
    position: absolute; /*will check what parent element it should be positioned to - postion relative has to be set*/
    border-radius: 5px;
    background: #1C7CCC;
    backface-visibility: hidden;
  }
  
  .front-face {
    transform: rotateY(180deg);
  }